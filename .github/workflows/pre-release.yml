name: pre-release

on:
  push:
    branches:
      - master

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  validate:
    name: Validate CHANGELOG
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'chore(release):') }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Validate structure
        run: npx tsx scripts/release/validate-changelog.ts

  pre-release:
    name: Apply version and tag
    needs: validate
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'chore(release):') }}
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup
        uses: ./.github/actions/setup

      - id: apply
        name: Compute and apply next version
        uses: actions/github-script@v7
        with:
          script: |
            require('ts-node/register/transpile-only');
            await require('./scripts/release/apply-release.ts').default(core);

      - run: bash scripts/git-user-config.sh
      - name: Commit version bump and changelog update
        if: steps.apply.outputs.skip != 'true'
        run: |
          git add package.json package-lock.json CHANGELOG.md
          if ! git diff --cached --quiet; then
            git commit -m "chore(release): v${{ steps.apply.outputs.version }}"
            git tag v${{ steps.apply.outputs.version }}
            git push origin HEAD:main
            git push origin HEAD:main --tags
          fi
